generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           String                @id
  active       Boolean
  name         String
  email        String                @unique
  password     String
  fingerprint  String                @unique
  created_at   DateTime
  enrollment   String?               @unique
  birth        DateTime?
  shift        Shift?
  roles         Role[]
  students     ResponsibleRelation[] @relation("responsibles")
  responsibles ResponsibleRelation[] @relation("students")
  logs         Log[]
  email_tokens EmailToken[]
  refresh_tokens RefreshToken[]

  @@map("users")
}

model Role {
  id        String   @id
  role_type RoleType
  user      User     @relation(fields: [user_id], references: [id])
  user_id   String

  @@map("roles")
}

model ResponsibleRelation {
  student        User   @relation("students", fields: [student_id], references: [id])
  student_id     String
  responsible    User   @relation("responsibles", fields: [responsible_id], references: [id])
  responsible_id String

  @@id([student_id, responsible_id])
  @@map("responsible_relations")
}

model Log {
  id         String   @id
  log_type   LogType
  created_at DateTime
  user       User     @relation(fields: [user_id], references: [id])
  user_id    String

  @@map("logs")
}

// Should we have a separate table for admins?
model Admin {
  id String @id
  name String
  email String @unique
  password String

  @@map("admins")
}

model EmailToken {
  id String @id
  created_at DateTime
  expires_at DateTime
  user User @relation(fields: [user_id], references: [id])
  user_id String

  @@map("email_tokens")
}

model RefreshToken {
  id String @id
  created_at DateTime
  expires_at DateTime
  user User @relation(fields: [user_id], references: [id])
  user_id String

  @@map("refresh_tokens")
}

enum LogType {
  IN
  OUT
}

enum RoleType {
  ADMIN
  STUDENT
  RESPONSIBLE
  EMPLOYEE
}

enum Shift {
  MORNING
  AFTERNOON
  NIGHT
}
